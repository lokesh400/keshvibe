<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>My Cart</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&amp;display=swap"
        rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet" />
    <link href="https://ai-public.creatie.ai/gen_page/tailwind-custom.css" rel="stylesheet" />
    <script
        src="https://cdn.tailwindcss.com/3.4.5?plugins=forms@0.5.7,typography@0.5.13,aspect-ratio@0.4.2,container-queries@0.1.1"></script>
    <script src="https://ai-public.creatie.ai/gen_page/tailwind-config.min.js" data-color="#000000"
        data-border-radius="medium"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
</head>

<body class="bg-gray-50 font-[&#39;Inter&#39;]">
   <header class="fixed top-0 left-0 w-full z-50" >
        <%- include('components/navbar.ejs') %>
   </header>
    <main class="max-w-8xl mx-auto px-4 sm:px-6 lg:px-8 py-12 mt-10">
        <div class="lg:grid lg:grid-cols-12 lg:gap-x-12 lg:items-start">
            <div class="lg:col-span-7">
                <div class="flex items-center justify-between">
                    <h1 class="text-2xl font-semibold text-gray-900">Your Cart (<%= cart.items.length %>)</h1>
                </div>

                <div class="mt-8 space-y-6">


                    <% cart.items.forEach(item=> { %>

                        <div class="flex items-center justify-between bg-white p-6 rounded-lg shadow-sm">
                            <div class="flex items-center space-x-4">
                                <img src="<%= item.product.coverPhoto %>" alt="Wireless Headphones"
                                    class="w-24 h-24 rounded-md object-cover" />
                                <div>
                                    <h3 class="text-base font-medium text-gray-900">
                                        <%= item.product.name %>
                                    </h3>
                                    <p class="mt-1 text-sm text-gray-500">
                                        <%= item.product.color || 'N/A' %>
                                    </p>
                                    <div class="mt-4 flex items-center space-x-4">
                                        <button class="px-3 py-1 text-gray-500"
                                            onclick="updateQuantity('<%= cart.user %>', '<%= item.product._id %>', -1)"><i
                                                class="fas fa-minus text-xs"></i></button>
                                        <span class="px-3 py-1 border-x">
                                            <%= item.quantity %>
                                        </span>
                                        <button class="px-3 py-1 text-gray-500"
                                            onclick="updateQuantity('<%= cart.user %>', '<%= item.product._id %>', 1)"><i
                                            class="fas fa-plus text-xs"></i></button>
                                    </div>
                                </div>
                            </div>
                            <div class="flex flex-col items-end space-y-3">
                                <p class="font-medium">â‚¹<%= item.product.price * item.quantity %>
                                </p>
                                <button class="text-sm text-red-600 hover:text-red-500" onclick="deleteProduct('<%= item.product._id %>')" >
                                    <i class="far fa-trash-alt mr-1"></i>
                                    Remove
                                </button>
                            </div>
                        </div>
                        <% }); %>
                </div>
            </div>
            <div class="lg:col-span-5 mt-12 lg:mt-0">
                <div class="bg-white p-6 rounded-lg shadow-sm sticky top-4">
                    <h2 class="text-lg font-medium text-gray-900">Order Summary</h2>

                    <div class="mt-6 space-y-4">
                        <div class="flex items-center justify-between">
                            <p class="text-sm text-gray-600">Subtotal</p>
                            <p class="text-sm font-medium text-gray-900">$779.97</p>
                        </div>
                        <div class="flex items-center justify-between">
                            <p class="text-sm text-gray-600">Shipping</p>
                            <p class="text-sm font-medium text-gray-900">$9.99</p>
                        </div>
                        <div class="flex items-center justify-between">
                            <p class="text-sm text-gray-600">Tax</p>
                            <p class="text-sm font-medium text-gray-900">$78.00</p>
                        </div>
                        <div class="border-t border-gray-200 pt-4">
                            <div class="flex items-center justify-between">
                                <p class="text-base font-medium text-gray-900">Total</p>
                                <p class="text-xl font-semibold text-gray-900">$867.96</p>
                            </div>
                        </div>
                    </div>
                    <div class="mt-8">
                        <p class="text-sm text-gray-600 mb-4">Estimated delivery: 3-5 business days</p>
                        <div class="flex flex-col space-y-4">
                            <button onclick="initiatePayment('<%= cart.user %>', <%= totalAmount * 100 %>)"
                                class="!rounded-button w-full bg-custom text-white py-3 hover:bg-custom-dark">
                                Proceed to Checkout
                            </button>
                            <button
                                class="!rounded-button w-full bg-white text-custom border border-custom py-3 hover:bg-gray-50">
                                Continue Shopping
                            </button>
                        </div>
                    </div>
                    <div class="mt-8 border-t border-gray-200 pt-6">
                        <p class="text-sm text-gray-600 mb-4">We accept:</p>
                        <div class="flex space-x-4 text-gray-400">
                            <i class="fab fa-cc-visa text-2xl"></i>
                            <i class="fab fa-cc-mastercard text-2xl"></i>
                            <i class="fab fa-cc-amex text-2xl"></i>
                            <i class="fab fa-cc-paypal text-2xl"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <script>
        async function initiatePayment(userId, amount) {
            try {
                const orderResponse = await fetch('/cart/create-order', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ userId, amount })
                });
                if (!orderResponse.ok) throw new Error('Failed to create order');
                const order = await orderResponse.json();
                const options = {
                    key: '<%= keyId %>',
                    amount: amount,
                    currency: 'INR',
                    name: 'Your Store',
                    description: 'Shopping Cart Checkout',
                    order_id: order.orderId,
                    handler: async function (response) {
                        const verifyResponse = await fetch('/cart/verify-payment', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({
                                razorpay_order_id: response.razorpay_order_id,
                                razorpay_payment_id: response.razorpay_payment_id,
                                razorpay_signature: response.razorpay_signature,
                                userId
                            })
                        });
                        if (verifyResponse.ok) {
                            alert('Payment successful! Order placed.');
                            window.location.href = '/my/order-success';
                        } else {
                            alert('Payment verification failed.');
                        }
                    },
                    prefill: {
                        email: '<%= currUser.email %>',
                        contact: '<%= currUser.mobile %>'
                    },
                    theme: { color: '#28a745' }
                };
                const rzp = new Razorpay(options);
                rzp.open();
            } catch (error) {
                console.error('Error during payment:', error);
                alert('Something went wrong. Please try again.');
            }
        }

        async function updateQuantity(userId, productId, change) {
            try {
                const response = await fetch("/update-quantity", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ userId, productId, change })
                });

                if (response.ok) {
                    window.location.reload(); // Reload page after update
                } else {
                    const data = await response.json();
                    alert(data.message || "Error updating quantity");
                }
            } catch (error) {
                console.error("Error updating cart:", error);
                alert("Something went wrong. Please try again.");
            }
        }

        async function deleteProduct(id){
            try {
                const response = await fetch("/delete/this/product", {
                    method: "DELETE",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({id})
                });

                if (response.ok) {
                    window.location.reload(); // Reload page after update
                } else {
                    const data = await response.json();
                    alert(data.message || "Error updating quantity");
                }
            } catch (error) {
                console.error("Error updating cart:", error);
                alert("Something went wrong. Please try again.");
            }
        }


    </script>
</body>

</html>